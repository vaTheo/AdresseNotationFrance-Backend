generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   userUUID            String                  @unique
//   password            String?
//   email               String?                 @unique
//   createdAt           DateTime                @default(now())
//   username            String?                 @unique
//   role                String                  @default("user")
//   dataSourceAddresses UserAddressInfo[]
// }

model AddressInfo {
  addressID           String                  @unique
  street              String
  city                String
  postcode            String
  citycode            String
  latitude            Float
  longitude           Float
  AllRatings          AllRatings[]
  jsonDataEau         jsonDataEau[]
  jsonDataGeorisque   jsonDataGeorisque[]
  jsonDataParcCarto   jsonDataParcCarto[]
  jsonDataDPE         jsonDataDPE[]
  // users               UserAddressInfo[]
}

// model UserAddressInfo {
//   userUUID          String
//   addressInfoId     String
//   user              User          @relation(fields: [userUUID], references: [userUUID])
//   addressInfo       AddressInfo   @relation(fields: [addressInfoId], references: [addressID])
//   @@id([userUUID, addressInfoId])
// }
model jsonDataEau {
  addressID     String      @unique
  eauPotable    Json?
  coursEau      Json?
  dataSource    AddressInfo @relation(fields: [addressID], references: [addressID])
}

model jsonDataGeorisque {
  addressID                 String      @unique
  AZIData                   Json?
  CatnatData                Json?
  InstallationsClasseesData Json?
  MVTData                   Json?
  RadonData                 Json?
  RisquesData               Json?
  SISData                   Json?
  TRIData                   Json?
  ZonageSismiqueData        Json?
  dataSource                AddressInfo @relation(fields: [addressID], references: [addressID])
}

model jsonDataParcCarto{
   addressID                String      @unique
    naturaHabitat           Json?            
    naturaOiseaux           Json?            
    rnc                     Json?  
    rnn                     Json?  
    znieff1                 Json?      
    znieff2                 Json?      
    pn                      Json?  
    pnr                     Json?  
    rncf                    Json?    
  dataSource                AddressInfo @relation(fields: [addressID], references: [addressID])
}

model jsonDataDPE{
  addressID                   String      @unique
  DPEHabitatExistant          Json?
  DPEHabitatExistantAvant2021 Json?            
  DPEHabitatNeuf              Json?            
  DPETertiaire                Json?
  DPETertiaireAvant2021       Json?
  
  dataSource                AddressInfo @relation(fields: [addressID], references: [addressID])
}


model AllRatings {
  addressID                   String       @unique
  eauPotable                  Int?
  coursEau                    Int?
  AZIData                     Int?
  CatnatData                  Int?
  InstallationsClasseesData   Int?
  MVTData                     Int?
  RadonData                   Int?
  RisquesData                 Int?
  SISData                     Int?
  TRIData                     Int?
  ZonageSismiqueData          Int?
  naturaHabitat               Int?
  naturaOiseaux               Int?        
  rnc                         Int?               
  rnn                         Int?               
  znieff1                     Int?                   
  znieff2                     Int?                   
  pn                          Int?             
  pnr                         Int?               
  rncf                        Int?
  DPEHabitatExistant          Int?
  DPEHabitatExistantAvant2021 Int?
  DPEHabitatNeuf              Int?               
  DPETertiaire                Int?
  DPETertiaireAvant2021       Int?
  reatedAt                    DateTime     @default(now())
  dataSource                  AddressInfo? @relation(fields: [addressID], references: [addressID])
}
